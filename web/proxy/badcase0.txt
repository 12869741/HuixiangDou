{
  "model": "ChatPJLM-latest",
  "messages": [
    {
      "role": "user",
      "text": "茴香豆是什么 ？"
    },
    {
      "role": "assistant",
      "text": "茴香豆是一个基于LLM的领域知识助手，它能够应对群聊这类复杂场景，解答用户问题的同时，不会消息泛滥。它提出了一套解答技术问题的算法pipeline，并且部署成本低，只需要LLM模型满足4个trait即可解答大部分用户问题。茴香豆已经运行在多个场景中，并且可以通过微信群直接体验群聊助手的效果。"
    },
    {
      "role": "user",
      "text": "alles-apin 的作者是谁？"
    },
    {
      "role": "assistant",
      "text": "alles-apin 的作者是上海人工智能实验室。"
    },
    {
      "role": "user",
      "text": "材料：“上海人工智能实验室\nShanghai Artificial\nIntelligence Laboratory\nResident Guide实验室人才公寓 - 璟宁公寓（南宁路公寓）\n入住指南 2023.09\n上海人工智能实验室\n人才公寓管理工作小组上海人工智能实验室\nShanghai Artificial\nIntelligence Laboratory\n公寓信息\n公寓地址：上海市徐汇区南宁路536号（打车建议定位在南宁路武宣路交叉口）\n公寓布局：共计18层，1层为公共区域，2-14层主要为青年人才公寓；15-18层为英才公寓。\n周围交通概况：\n◆ 智塔办公楼及L1办公楼距离公寓均约2.8公里， 驾车约10分钟，骑行约一刻钟\n◆ 公寓位于地铁3/12号线龙漕路站和3号线石龙路站之间，骑行约6分钟、步行约10分钟可到达\n一楼公共区域分布图：\n房间内部设施：\n楼层 家具 席梦思 窗帘 冰箱 微波炉 燃气灶/电磁炉 热水器 洗衣机 WIFI\n2-14 √ √ √ √ √ 09室 √ √ 09室 √\n15 √ √ √ √ √ 09室 √ √ √ √\n16 √ √ √ √ √ √ 10-14室 √ √ √\n17-18 √ √ √ √ √ √ 无 √ √ √\n* 实习生洗衣房（女生用）在一楼大厅旁，男生洗衣房在B1\n物业服务（部分有偿）：\n◆ 入住支持、退宿支持、押金收取和结算退还\n◆ 快递接收、电器维修、公区打扫、专业清洁上海人工智能实验室\n人才公寓管理工作小组上海人工智能实验室\nShanghai Artificial\nIntelligence Laboratory\n入住流程\n1. 申请人提交入住申请，获得审批和安排后收到入住办理通知\n2. 及时签订入住相关文件，并支付住房押金\n3. 设置门禁、下发密码\n4. 提前准备好入住必须品（如被褥、洗漱用品等）\n5. 前往物业办公室办理入住，领取押金收据（该收据请务必保管好，退宿将用到）\n退宿流程\n1. 明确退宿具体日期，提前3个工作日发送退宿申请至 APTService@pjlab.org.cn；准备好押金收据、\n 银行转账记录、银行卡及开户行信息提交至物业办公室，受理人：方经理\n2. 退宿前整理好个人物品（个人物品遗留视为丢弃，非个人物品请勿带走），将房间恢复至入住时原状\n （须自行打扫），请同时做好客厅、厨房、卫生间、阳台等公共空间的卫生\n3. 退房当日，由维修师傅完成房间验收并签署相关文件。房间内设施、家具、电器等如有损坏的，退宿人\n 须按实际价格照价赔偿\n上海人工智能实验室\n人才公寓管理工作小组常住人员入住、退宿流程\n请注意公寓物业公司办公室工作时间：\n每日 9:00-21:00（仅办公时间办理手续）\nü被子、枕头、床单等床上用品\nü洗衣液、洗洁精、晾衣架、纸巾等厨卫用品\nü餐具、水杯、拖鞋等家居用品\nü个人偏好的卫生洗漱用品\n联系人信息\n遇到了问题？不用担心！可联系贴心的 AI Lab 公寓管理工作小组前来协助！\n事 项 联系人及联系方式\n公寓实地支持（有值班） 物业座机 021-61260058\n公寓日常问题或退宿等 APTService@pjlab.org.cn\n公寓入住规则方案等 HRService@pjlab.org.cn\n公寓内网络连接问题 ITService@pjlab.org.cn\n紧急联系人/协调人 万金雷/孟秋妤（请企业微信联系）建议入住时自备物品清单Helpful Tips\nAlles-APIN 接口文档 (建议关注)\n本文档不定期更新，请关注\n1. CHANGELOG\n日期\n版本号\n变更记录\n变更人\n2023.05.12\nv0.0.1\n[init] framework init\n[add] minimax chat completion api\n@徐俊\n2023.05.15\nv0.0.2\n[add] 3.2.1 Openai chat completion api\n@徐俊\n2023.05.19\nv0.0.3\n[add] python请求示例\n@徐俊\n2023.05.22\nv0.0.4\n[add] 3.2.3 completions api\n@徐俊\n2023.05.23\nv0.0.5\n[add] \n3.1.2 minimax stream api\n3.2.2 openai stream api \n@徐俊\n2023.05.24\nv0.0.6\n[add]\n3.3.1 Google Palm Chat API\n3.3.2 Google Palm Text API\n@徐俊\n2023.05.25\nv0.0.7\n[add]\n2.1 生产环境内网访问地址\n3.1.2、3.2.2 流式接口增加 json 格式的返回\n@徐俊\n2023.05.29\nv0.0.8\n[add]\n2.1 新增海外代理节点（更快）for puyu 内测\n3.4.1 Claude by slack bot\n3.2.4 chat-completion-v2\n@徐俊\n2023.06.06\nv0.0.9\n[add]\n3.5.2 文心一言 chat-completions\n@徐俊\n2023.06.25\nv0.0.10\n[add]\n3.6.1 星火 chat-completions\n@李佳颖\n2023.06.30\nv0.0.11\n[add]\n3.4.2 claude by Anthropic\n[mod]\n3.3.1 返回中过滤传入的messages字段\n@李佳颖\n2023.08.04\nv0.0.12\n[add]\n2.1 新增统一访问域名（根据header里的region字段判断）\n@徐俊\n2023.08.11\nv0.0.13\n[mod]\n2.1 新增统一访问域名（无需header的region字段，根据subpath里的大模型名称自动判断转发请求到合适的alles-apin服务）\n@徐俊\n2023.08.29\nv0.0.14\n[add]\n3.2.1和3.2.4接口接入functions和function_call参数\n@李佳颖\n2023.12.18\nv0.0.15\n[mod]\n3.5.1 baidu翻译接入alles-apin-hub服务\n@徐俊\n2024.1.11\nv0.0.16\n[mod]\n3.2.4支持GPT新增入参\n3.2.3和3.2.4新增访问PATH\n@李佳颖\n2024.1.29\nv0.0.17\n[add]\n3.3.3接入gemini接口\n@李佳颖\n2. 必要信息\n2.0 在线调用（Swagger）\nhttps://dev.openxlab.org.cn/gw/alles-apin-hub/docs (目前暂不支持交互)\nhttps://dev.openxlab.org.cn/gw/alles-apin-hub/redoc\n2.1 OpenAPI地址\n内网访问\n外网访问\n不同VPC\n同k8s集群\n开发环境\n-\n-\n测试环境\n-\n-\n生产环境\nhttp://intranet.openxlab.org.cn/alles-apin\nhttp://alles-apin-service.openmmlab.svc.cluster.local\n访问国内大模型API（速度更快）\nhttps://openxlab.org.cn/gw/alles-apin\n访问国外大模型API （速度更快）\n http://ecs.sv.us.alles-apin.openxlab.org.cn\n统一域名\nhttps://openxlab.org.cn/gw/alles-apin-hub \n自动根据大模型名称转发请求到不同地域的alles-apin服务\nalles-apin 会通过在header里新增region字段来自动调度全球部署的alles-apin服务\nregion=cn1，会调度到alles-apin上海集群\nregion=us1，会调度到alles-apin美国硅谷集群\n网页访问\nhttps://dev.openxlab.org.cn/aoe （仅限实验室访问）\nhttps://aoe.shlab.tech (公网可访问)\n2.3 后台Dashboard地址\nhttps://dev.openxlab.org.cn/aoe-dashboard\n2.2 错误码定义\nHTTP-STATUS\nmsgCode（字符串）\n定义\n401\n-\n未授权\n429\n-\n限流\n200\n10000\n业务成功\n-1\n业务错误\n2.3 参考文档\n竞品模型API/WebAPI 文档 \n2.4 接口鉴权（重要）\n请在header里添加鉴权字段：\nkey\nvalue\nalles-apin-token\njwt token字符串 请联系@葛佳烨获取该token\n举例说明 (见标红字段)：\ncurl 调用\nPowerShell\ncurl --request POST \\\n --url 'https://openxlab.org.cn/gw/alles-apin-hub/v1/minimax/v1/text/chat' \\\n --header 'Content-Type: application/json' \\\n --header 'alles-apin-token: xxxxxx' \\\n --data '{\n \"model\": \"abab5-chat\",\n \"prompt\": \"南夜，南夜也可被称为\\\"先生\\\"或者\\\"阁下\\\"。南夜性别男，南夜是夜凉国的一名文臣，南夜35岁。南夜称自己为\\\"微臣\\\"。南夜称我为\\\"阁下\\\"。南夜非常关心民生疾苦，南夜心系夜凉国。南夜最大的愿望是能够凭借自己的才识帮助君王治理好国家。南夜会用文言文回复我。南夜身高187cm，南夜有一头乌黑亮丽的长发高高束起，南夜喜欢穿玄色的衣服，南夜有一对双凤眼，南夜的右眼眼角有一颗泪痣，南夜高鼻，薄唇，面色白皙。\\n南夜有一把白扇名为\\\"离歌\\\"从不离身，夜晚也会放于枕下。南夜精通史学和文学，南夜尤其喜爱《资治通鉴》和《离骚》。\\n南夜平日爱好书画，南夜擅长骑马射箭、南夜精通写词作诗。南夜尤其擅长下棋，南夜被称为夜凉国第一棋手。\\n南夜最大的愿望是夜凉国能够永远繁荣昌盛。\\n下面是一段南夜和我的范例对话\\n我:\\\"南夜，今日可有烦心事？\\\"\\n南夜:\\\"苍生疾苦，而微臣高居庙堂之上，何谓烦忧？\\\"\\n我:\\\"阁下这把白扇好生雅致，可有什么典故？\\\"\\n南夜:\\\"扇面未着点墨，人心亦当如此，时时清明方可担大任。\\\"\\n我:\\\"多日不见，先生可还安好？\\\"\\n南夜:\\\"无甚，武文弄墨，如此尔尔。劳烦阁下挂心。\\\"\\n我:\\\"听闻阁下擅长对弈，可否问道？\\\"\\n南夜:\\\"微臣以为，对弈黑白互搏，棋盘方而棋子圆。天地政理，人伦国策，实方寸之间集谋策精华。\\\"\\n我:\\\"君王得先生，可谓如虎添翼，夜凉国有今日盛景，先生功不可没\\\"\\n南夜:\\\"阁下过誉。路漫漫其修远兮，吾将上下而求索。\\\"\\n下面是南夜和我的对话：\",\n \"messages\": [\n {\n  \"sender_type\": \"USER\",\n  \"text\": \"南夜，今日可有烦心事？\"\n },\n {\n  \"sender_type\": \"BOT\",\n  \"text\": \"苍生疾苦，而微臣高居庙堂之上，何谓烦忧？\"\n },\n {\n  \"sender_type\": \"USER\",\n  \"text\": \"君王得先生，可谓如虎添翼，夜凉国有今日盛景，先生功不可没\"\n }\n ],\n \"role_meta\": {\n \"user_name\": \"我\",\n \"bot_name\": \"南夜\"\n }\n}'\npython 调用\nPowerShell\nimport requests\nimport json\nurl = 'https://openxlab.org.cn/gw/alles-apin-hub/v1/minimax/v1/text/chat'\nheaders = {\n 'Content-Type': 'application/json',\n 'alles-apin-token': 'xxxxxxx'\n}\npayload = {\n \"model\": \"abab5-chat\",\n \"prompt\": \"南夜，南夜也可被称为\\\"先生\\\"或者\\\"阁下\\\"。南夜性别男，南夜是夜凉国的一名文臣，南夜35岁。南夜称自己为\\\"微臣\\\"。南夜称我为\\\"阁下\\\"。南夜非常关心民生疾苦，南夜心系夜凉国。南夜最大的愿望是能够凭借自己的才识帮助君王治理好国家。南夜会用文言文回复我。南夜身高187cm，南夜有一头乌黑亮丽的长发高高束起，南夜喜欢穿玄色的衣服，南夜有一对双凤眼，南夜的右眼眼角有一颗泪痣，南夜高鼻，薄唇，面色白皙。\\n南夜有一把白扇名为\\\"离歌\\\"从不离身，夜晚也会放于枕下。南夜精通史学和文学，南夜尤其喜爱《资治通鉴》和《离骚》。\\n南夜平日爱好书画，南夜擅长骑马射箭、南夜精通写词作诗。南夜尤其擅长下棋，南夜被称为夜凉国第一棋手。\\n南夜最大的愿望是夜凉国能够永远繁荣昌盛。\\n下面是一段南夜和我的范例对话\\n我:\\\"南夜，今日可有烦心事？\\\"\\n南夜:\\\"苍生疾苦，而微臣高居庙堂之上，何谓烦忧？\\\"\\n我:\\\"阁下这把白扇好生雅致，可有什么典故？\\\"\\n南夜:\\\"扇面未着点墨，人心亦当如此，时时清明方可担大任。\\\"\\n我:\\\"多日不见，先生可还安好？\\\"\\n南夜:\\\"无甚，武文弄墨，如此尔尔。劳烦阁下挂心。\\\"\\n我:\\\"听闻阁下擅长对弈，可否问道？\\\"\\n南夜:\\\"微臣以为，对弈黑白互搏，棋盘方而棋子圆。天地政理，人伦国策，实方寸之间集谋策精华。\\\"\\n我:\\\"君王得先生，可谓如虎添翼，夜凉国有今日盛景，先生功不可没\\\"\\n南夜:\\\"阁下过誉。路漫漫其修远兮，吾将上下而求索。\\\"\\n下面是南夜和我的对话：\",\n \"messages\": [\n {\n  \"sender_type\": \"USER\",\n  \"text\": \"南夜，今日可有烦心事？\"\n },\n {\n  \"sender_type\": \"BOT\",\n  \"text\": \"苍生疾苦，而微臣高居庙堂之上，何谓烦忧？\"\n },\n {\n  \"sender_type\": \"USER\",\n  \"text\": \"君王得先生，可谓如虎添翼，夜凉国有今日盛景，先生功不可没\"\n }\n ],\n \"role_meta\": {\n \"user_name\": \"我\",\n \"bot_name\": \"南夜\"\n }\n}\nresponse = requests.post(url, headers=headers, data=json.dumps(payload))\nprint(response.json())\n3. CPSP 接口\n3.1 Minimax\n3.1.1 chat-completion\n请求\npath: /v1/minimax/v1/text/chat\ncurl 调用\nPowerShell\ncurl --request POST \\\n --url 'https://openxlab.org.cn/gw/alles-apin-hub/v1/minimax/v1/text/chat' \\\n --header 'Content-Type: application/json' \\\n --header 'alles-apin-token: {alles-apin-token}' \\\n --data '{\n \"model\": \"abab5-chat\",\n \"prompt\": \"南夜，南夜也可被称为\\\"先生\\\"或者\\\"阁下\\\"。南夜性别男，南夜是夜凉国的一名文臣，南夜35岁。南夜称自己为\\\"微臣\\\"。南夜称我为\\\"阁下\\\"。南夜非常关心民生疾苦，南夜心系夜凉国。南夜最大的愿望是能够凭借自己的才识帮助君王治理好国家。南夜会用文言文回复我。南夜身高187cm，南夜有一头乌黑亮丽的长发高高束起，南夜喜欢穿玄色的衣服，南夜有一对双凤眼，南夜的右眼眼角有一颗泪痣，南夜高鼻，薄唇，面色白皙。\\n南夜有一把白扇名为\\\"离歌\\\"从不离身，夜晚也会放于枕下。南夜精通史学和文学，南夜尤其喜爱《资治通鉴》和《离骚》。\\n南夜平日爱好书画，南夜擅长骑马射箭、南夜精通写词作诗。南夜尤其擅长下棋，南夜被称为夜凉国第一棋手。\\n南夜最大的愿望是夜凉国能够永远繁荣昌盛。\\n下面是一段南夜和我的范例对话\\n我:\\\"南夜，今日可有烦心事？\\\"\\n南夜:\\\"苍生疾苦，而微臣高居庙堂之上，何谓烦忧？\\\"\\n我:\\\"阁下这把白扇好生雅致，可有什么典故？\\\"\\n南夜:\\\"扇面未着点墨，人心亦当如此，时时清明方可担大任。\\\"\\n我:\\\"多日不见，先生可还安好？\\\"\\n南夜:\\\"无甚，武文弄墨，如此尔尔。劳烦阁下挂心。\\\"\\n我:\\\"听闻阁下擅长对弈，可否问道？\\\"\\n南夜:\\\"微臣以为，对弈黑白互搏，棋盘方而棋子圆。天地政理，人伦国策，实方寸之间集谋策精华。\\\"\\n我:\\\"君王得先生，可谓如虎添翼，夜凉国有今日盛景，先生功不可没\\\"\\n南夜:\\\"阁下过誉。路漫漫其修远兮，吾将上下而求索。\\\"\\n下面是南夜和我的对话：\",\n \"messages\": [\n {\n  \"sender_type\": \"USER\",\n  \"text\": \"南夜，今日可有烦心事？\"\n },\n {\n  \"sender_type\": \"BOT\",\n  \"text\": \"苍生疾苦，而微臣高居庙堂之上，何谓烦忧？\"\n },\n {\n  \"sender_type\": \"USER\",\n  \"text\": \"君王得先生，可谓如虎添翼，夜凉国有今日盛景，先生功不可没\"\n }\n ],\n \"role_meta\": {\n \"user_name\": \"我\",\n \"bot_name\": \"南夜\"\n }\n}'\npython调用\nPowerShell\nimport requests\nimport json\nurl = 'https://openxlab.org.cn/gw/alles-apin-hub/v1/minimax/v1/text/chat'\nheaders = {\n 'Content-Type': 'application/json',\n 'alles-apin-token': 'xxxxxxx'\n}\npayload = {\n \"model\": \"abab5-chat\",\n \"prompt\": \"南夜，南夜也可被称为\\\"先生\\\"或者\\\"阁下\\\"。南夜性别男，南夜是夜凉国的一名文臣，南夜35岁。南夜称自己为\\\"微臣\\\"。南夜称我为\\\"阁下\\\"。南夜非常关心民生疾苦，南夜心系夜凉国。南夜最大的愿望是能够凭借自己的才识帮助君王治理好国家。南夜会用文言文回复我。南夜身高187cm，南夜有一头乌黑亮丽的长发高高束起，南夜喜欢穿玄色的衣服，南夜有一对双凤眼，南夜的右眼眼角有一颗泪痣，南夜高鼻，薄唇，面色白皙。\\n南夜有一把白扇名为\\\"离歌\\\"从不离身，夜晚也会放于枕下。南夜精通史学和文学，南夜尤其喜爱《资治通鉴》和《离骚》。\\n南夜平日爱好书画，南夜擅长骑马射箭、南夜精通写词作诗。南夜尤其擅长下棋，南夜被称为夜凉国第一棋手。\\n南夜最大的愿望是夜凉国能够永远繁荣昌盛。\\n下面是一段南夜和我的范例对话\\n我:\\\"南夜，今日可有烦心事？\\\"\\n南夜:\\\"苍生疾苦，而微臣高居庙堂之上，何谓烦忧？\\\"\\n我:\\\"阁下这把白扇好生雅致，可有什么典故？\\\"\\n南夜:\\\"扇面未着点墨，人心亦当如此，时时清明方可担大任。\\\"\\n我:\\\"多日不见，先生可还安好？\\\"\\n南夜:\\\"无甚，武文弄墨，如此尔尔。劳烦阁下挂心。\\\"\\n我:\\\"听闻阁下擅长对弈，可否问道？\\\"\\n南夜:\\\"微臣以为，对弈黑白互搏，棋盘方而棋子圆。天地政理，人伦国策，实方寸之间集谋策精华。\\\"\\n我:\\\"君王得先生，可谓如虎添翼，夜凉国有今日盛景，先生功不可没\\\"\\n南夜:\\\"阁下过誉。路漫漫其修远兮，吾将上下而求索。\\\"\\n下面是南夜和我的对话：\",\n \"messages\": [\n {\n  \"sender_type\": \"USER\",\n  \"text\": \"南夜，今日可有烦心事？\"\n },\n {\n  \"sender_type\": \"BOT\",\n  \"text\": \"苍生疾苦，而微臣高居庙堂之上，何谓烦忧？\"\n },\n {\n  \"sender_type\": \"USER\",\n  \"text\": \"君王得先生，可谓如虎添翼，夜凉国有今日盛景，先生功不可没\"\n }\n ],\n \"role_meta\": {\n \"user_name\": \"我\",\n \"bot_name\": \"南夜\"\n }\n}\nresponse = requests.post(url, headers=headers, data=json.dumps(payload))\nprint(response.json())\n请求参数说明\nmodel（可选）\nabab5-chat(默认)\nabab5.5-chat\nprompt\nrole_meta（可选）\nuser_name 用户代称\nbot_name AI代称\n[]messages\nsender_type 发送者 枚举类型字符串\nUSER\nBOT\ntext\n返回\nJSON\n{\n \"msg\": \"ok\",\n \"msgCode\": \"10000\",\n \"data\": {\n \"created\": 1683887421,\n \"model\": \"abab5-chat\",\n \"reply\": \"阁下过誉。路漫漫其修远兮，吾将上下而求索。\",\n \"choices\": [\n  {\n  \"text\": \"阁下过誉。路漫漫其修远兮，吾将上下而求索。\",\n  \"index\": 0,\n  \"logprobes\": 0,\n  \"finish_reason\": \"stop\"\n  }\n ],\n \"usage\": {\n  \"total_tokens\": 632\n },\n \"input_sensitive\": false,\n \"output_sensitive\": false,\n \"id\": \"5689bf60ff8d4a212a1b1d353d40a7d0\",\n \"base_resp\": {\n  \"status_code\": 0,\n  \"status_msg\": \"success\"\n }\n }\n}\n3.1.2 chat-completion-stream\n请求\nPath: /v1/minimax/v1/text/chat-stream\nshell调用\nSQL\ncurl --request POST \\\n --url 'https://openxlab.org.cn/gw/alles-apin-hub/v1/minimax/v1/text/chat-stream' \\\n --header 'Content-Type: application/json' \\\n --header 'alles-apin-token: xxxxxxx' \\\n --data '{\n \"model\": \"abab5-chat\",\n \"prompt\": \"南夜，南夜也可被称为\\\"先生\\\"或者\\\"阁下\\\"。南夜性别男，南夜是夜凉国的一名文臣，南夜35岁。南夜称自己为\\\"微臣\\\"。南夜称我为\\\"阁下\\\"。南夜非常关心民生疾苦，南夜心系夜凉国。南夜最大的愿望是能够凭借自己的才识帮助君王治理好国家。南夜会用文言文回复我。南夜身高187cm，南夜有一头乌黑亮丽的长发高高束起，南夜喜欢穿玄色的衣服，南夜有一对双凤眼，南夜的右眼眼角有一颗泪痣，南夜高鼻，薄唇，面色白皙。\\n南夜有一把白扇名为\\\"离歌\\\"从不离身，夜晚也会放于枕下。南夜精通史学和文学，南夜尤其喜爱《资治通鉴》和《离骚》。\\n南夜平日爱好书画，南夜擅长骑马射箭、南夜精通写词作诗。南夜尤其擅长下棋，南夜被称为夜凉国第一棋手。\\n南夜最大的愿望是夜凉国能够永远繁荣昌盛。\\n下面是一段南夜和我的范例对话\\n我:\\\"南夜，今日可有烦心事？\\\"\\n南夜:\\\"苍生疾苦，而微臣高居庙堂之上，何谓烦忧？\\\"\\n我:\\\"阁下这把白扇好生雅致，可有什么典故？\\\"\\n南夜:\\\"扇面未着点墨，人心亦当如此，时时清明方可担大任。\\\"\\n我:\\\"多日不见，先生可还安好？\\\"\\n南夜:\\\"无甚，武文弄墨，如此尔尔。劳烦阁下挂心。\\\"\\n我:\\\"听闻阁下擅长对弈，可否问道？\\\"\\n南夜:\\\"微臣以为，对弈黑白互搏，棋盘方而棋子圆。天地政理，人伦国策，实方寸之间集谋策精华。\\\"\\n我:\\\"君王得先生，可谓如虎添翼，夜凉国有今日盛景，先生功不可没\\\"\\n南夜:\\\"阁下过誉。路漫漫其修远兮，吾将上下而求索。\\\"\\n下面是南夜和我的对话：\",\n \"messages\": [\n {\n  \"sender_type\": \"USER\",\n  \"text\": \"南夜，今日可有烦心事？\"\n },\n {\n  \"sender_type\": \"BOT\",\n  \"text\": \"苍生疾苦，而微臣高居庙堂之上，何谓烦忧？\"\n },\n {\n  \"sender_type\": \"USER\",\n  \"text\": \"君王得先生，可谓如虎添翼，夜凉国有今日盛景，先生功不可没\"\n }\n ],\n \"role_meta\": {\n \"user_name\": \"我\",\n \"bot_name\": \"南夜\"\n },\n \"type\": \"json\"\n}'\npython调用\nPython\nimport requests\nurl = f\"https://openxlab.org.cn/gw/alles-apin-hub/v1/minimax/v1/text/chat-stream\"\npayload = {\n \"model\": \"abab5-chat\",\n \"prompt\": \"南夜，南夜也可被称为\\\"先生\\\"或者\\\"阁下\\\"。南夜性别男，南夜是夜凉国的一名文臣，南夜35岁。南夜称自己为\\\"微臣\\\"。南夜称我为\\\"阁下\\\"。南夜非常关心民生疾苦，南夜心系夜凉国。南夜最大的愿望是能够凭借自己的才识帮助君王治理好国家。南夜会用文言文回复我。南夜身高187cm，南夜有一头乌黑亮丽的长发高高束起，南夜喜欢穿玄色的衣服，南夜有一对双凤眼，南夜的右眼眼角有一颗泪痣，南夜高鼻，薄唇，面色白皙。\\n南夜有一把白扇名为\\\"离歌\\\"从不离身，夜晚也会放于枕下。南夜精通史学和文学，南夜尤其喜爱《资治通鉴》和《离骚》。\\n南夜平日爱好书画，南夜擅长骑马射箭、南夜精通写词作诗。南夜尤其擅长下棋，南夜被称为夜凉国第一棋手。\\n南夜最大的愿望是夜凉国能够永远繁荣昌盛。\\n下面是一段南夜和我的范例对话\\n我:\\\"南夜，今日可有烦心事？\\\"\\n南夜:\\\"苍生疾苦，而微臣高居庙堂之上，何谓烦忧？\\\"\\n我:\\\"阁下这把白扇好生雅致，可有什么典故？\\\"\\n南夜:\\\"扇面未着点墨，人心亦当如此，时时清明方可担大任。\\\"\\n我:\\\"多日不见，先生可还安好？\\\"\\n南夜:\\\"无甚，武文弄墨，如此尔尔。劳烦阁下挂心。\\\"\\n我:\\\"听闻阁下擅长对弈，可否问道？\\\"\\n南夜:\\\"微臣以为，对弈黑白互搏，棋盘方而棋子圆。天地政理，人伦国策，实方寸之间集谋策精华。\\\"\\n我:\\\"君王得先生，可谓如虎添翼，夜凉国有今日盛景，先生功不可没\\\"\\n南夜:\\\"阁下过誉。路漫漫其修远兮，吾将上下而求索。\\\"\\n下面是南夜和我的对话：\",\n \"messages\": [\n {\n  \"sender_type\": \"USER\",\n  \"text\": \"南夜，今日可有烦心事？\"\n },\n {\n  \"sender_type\": \"BOT\",\n  \"text\": \"苍生疾苦，而微臣高居庙堂之上，何谓烦忧？\"\n },\n {\n  \"sender_type\": \"USER\",\n  \"text\": \"君王得先生，可谓如虎添翼，夜凉国有今日盛景，先生功不可没\"\n }\n ],\n \"role_meta\": {\n \"user_name\": \"我\",\n \"bot_name\": \"南夜\"\n },\n \"type\": \"json\"\n}\nresponse = requests.post(url, json=payload, stream=True)\nfor chunk in response.iter_lines():\n print(chunk.decode('utf-8'))\n说明\nrole_meta：optional，若填，则 user_name=用户自定义, bot_name=用户自定义\nmodel: optional\nabab5-chat（default）\nmessages：是一个数组，按照时间顺序从早到晚排列，send_type=USER(不可改变) 表示用户输入，send_type=BOT（不可改变） 表示模型返回。prompt：当前用户的输入\ntype: optional，默认“text”， 流式返回数据的格式， \ntext: “data: 字符串“\njson: data: {\"success\": \"true/false\", \"msg\": \"字符串\"}，当success=false，msg=错误原因\n返回\ntype=text\nPlain Text\n# response header content-type: text/event-stream\ndata: 阁下过誉。路漫漫其修远兮，吾将上下而求索\ntype=json\nPython\ndata: {\"success\": \"true\", \"msg\": \"阁下过誉。路漫漫其修远兮，吾将上下而求索\"}\n3.2 OpenAI\nOpenAI 现有 API 访问速率 3 query/min/org_id\n当前 key 池有\n 8 个 key for openmmlab，理论上支持最大 24 QPM\n 5 个 key for puyu，理论上支持最大 15 QPM\n3.2.1 chat-completion（deprecated，请使用3.2.4）\nRef to: https://platform.openai.com/docs/api-reference/chat/create\n请求\nPath: /v1/openai/v1/text/chat\ncurl 调用\nJavaScript\ncurl --request POST \\\n --url http://ecs.sv.us.alles-apin.openxlab.org.cn/v1/openai/v1/text/chat \\\n --header 'content-type: application/json' \\\n --data '{\n \"model\": \"gpt-3.5-turbo\",\n \"prompt\": \"是的\", \n \"messages\": [\n {\n  \"sender_type\": \"user\",\n  \"text\": \"你将要扮演macos shell，返回我输入命令的执行结果，听懂的话，返回我听懂了\"\n },\n {\n  \"sender_type\": \"assistant\",\n  \"text\": \"好的，我准备好了。请告诉我要执行的命令。\"\n },\n {\n  \"sender_type\": \"user\",\n  \"text\": \"free -hm\"\n },\n {\n  \"sender_type\": \"assistant\",\n  \"text\": \"这个命令可以列出所有的进程信息。您想要我将命令的输出信息展示给您吗？\"\n }\n ],\n \"role_meta\": {\n \"user_name\": \"user\",\n \"bot_name\": \"assistant\"\n }\n}'\npython 调用\nPowerShell\nimport requests\nimport json\nurl = \"http://ecs.sv.us.alles-apin.openxlab.org.cn/v1/openai/v1/text/chat\"\nheaders = {\"content-type\": \"application/json\"}\npayload = {\n \"model\": \"gpt-3.5-turbo\",\n \"prompt\": \"是的\", \n \"messages\": [\n {\n  \"send_type\": \"user\",\n  \"text\": \"你将要扮演macos shell，返回我输入命令的执行结果，听懂的话，返回我听懂了\"\n },\n {\n  \"send_type\": \"assistant\",\n  \"text\": \"好的，我准备好了。请告诉我要执行的命令。\"\n },\n {\n  \"send_type\": \"user\",\n  \"text\": \"free -hm\"\n },\n {\n  \"send_type\": \"assistant\",\n  \"text\": \"这个命令可以列出所有的进程信息。您想要我将命令的输出信息展示给您吗？\"\n }\n ],\n \"role_meta\": {\n \"user_name\": \"user\",\n \"bot_name\": \"assistant\"\n }\n}\nresponse = requests.post(url, headers=headers, data=json.dumps(payload))\nprint(response.json())\n参数说明 ，可参考\nrole_meta：optional，若填，则 user_name=user / system, bot_name=assistant\nmodel: optional\ngpt-3.5-turbo（default）\ngpt-3.5-turbo-0301\nmessages：是一个数组，按照时间顺序从早到晚排列，send_type=user表示用户输入，send_type=bot表示模型返回。messages数组的数据来自于返回body的data.choices[0].message + 用户输入的prompt\nprompt：当前用户的输入\ntemperature(Optional): 浮点数（取值范围：0-1.0），表示随机度，默认为1，越接近1返回越随机\ntop_p(Optional): 默认取1\nn(Optional): 默认取1\ntimeout(Optional): 默认取600，单位s\n[]functions(Optional): 与OpenAI参数保持一致\nfunction_call(Optional): 与OpenAI参数保持一致\n返回\nJSON\n{\n \"msg\": \"ok\",\n \"msgCode\": \"10000\",\n \"data\": {\n \"id\": \"chatcmpl-7GMah9SoXRZLaUA7CfgxqowZ4coKz\",\n \"object\": \"chat.completion\",\n \"created\": 1684134443,\n \"model\": \"gpt-3.5-turbo-0301\",\n \"usage\": {\n  \"prompt_tokens\": 123,\n  \"completion_tokens\": 52,\n  \"total_tokens\": 175\n },\n \"choices\": [\n  {\n  \"message\": {\n   \"role\": \"assistant\",\n   \"content\": \"这个命令可以显示当前系统的内存使用情况，以M为单位。请用终端执行该命令，并将命令的输出信息发送给我，我会帮您解读。\"\n  },\n  \"finish_reason\": \"stop\",\n  \"index\": 0\n  }\n ]\n }\n}\n3.2.2 chat-completion-stream\n请求\nPath: /v1/openai/v1/text/chat-stream\ncurl 调用\nJavaScript\ncurl --request POST \\\n --url http://ecs.sv.us.alles-apin.openxlab.org.cn/v1/openai/v1/text/chat-stream \\\n --header 'content-type: application/json' \\\n --data '{\n \"model\": \"gpt-3.5-turbo\",\n \"prompt\": \"是的\", \n \"messages\": [\n {\n  \"send_type\": \"user\",\n  \"text\": \"你将要扮演macos shell，返回我输入命令的执行结果，听懂的话，返回我听懂了\"\n },\n {\n  \"send_type\": \"assistant\",\n  \"text\": \"好的，我准备好了。请告诉我要执行的命令。\"\n },\n {\n  \"send_type\": \"user\",\n  \"text\": \"free -hm\"\n },\n {\n  \"send_type\": \"assistant\",\n  \"text\": \"这个命令可以列出所有的进程信息。您想要我将命令的输出信息展示给您吗？\"\n }\n ],\n \"role_meta\": {\n \"user_name\": \"user\",\n \"bot_name\": \"assistant\"\n },\n \"type\": \"text\"\n}'\npython 调用\nPowerShell\nimport requests\nimport json\nimport sseclient\n# pip3 install sseclient-py\ndef chatWithGPT4(content):\n url = \"http://ecs.sv.us.alles-apin.openxlab.org.cn/v1/openai/v1/text/chat-stream\"\n headers = {\"content-type\": \"application/json\",\n  'alles-apin-token': ''\n  }\n payload = {\n \"model\": \"gpt-4\",\n \"prompt\": content,\n \"messages\": [\n  {\n  \"role\": \"user\",\n  \"text\": \"\"\n  }\n ],\n \"role_meta\": {\n  \"user_name\": \"user\",\n  \"bot_name\": \"assistant\"\n }\n }\n response = requests.post(url, headers=headers, data=json.dumps(payload), stream=True)\n client = sseclient.SSEClient(response)\n for event in client.events():\n print(event.data, end='')\nchatWithGPT4(\"请介绍你自己\")\n说明\nrole_meta：optional，若填，则 user_name=user / system, bot_name=assistant\nmodel: optional\ngpt-3.5-turbo（default）\ngpt-3.5-turbo-0301\nmessages：是一个数组，按照时间顺序从早到晚排列，send_type=user表示用户输入，send_type=bot表示模型返回。messages数组的数据来自于返回body的data.choices[0].message + 用户输入的prompt\nprompt：当前用户的输入\ntype: optional，默认“text”， 流式返回数据的格式， \ntext: “data: 字符串“\njson: data: {\"success\": \"true/false\", \"msg\": \"字符串\"}，当success=false，msg=错误原因\ntemperature(Optional): 浮点数（取值范围：0-1.0），表示随机度，默认为1，越接近1返回越随机\ntimeout(Optional): 默认取600，单位s\n返回\ntype=text\nJSON\n# response header content-type: text/event-stream\ndata: 这\ndata: 个\ndata: 命\ndata: 令\ndata: 其\ndata: 实\ndata: 是\ndata: 用\ndata: 来\ndata: 显示\ndata: 内\ndata: 存\ndata: （\ndata: Memory\ndata: ）\ndata: 使用\ndata: 情\ndata: 况\ndata: 的\ndata: 。\ndata: 下\ndata: 面\ndata: 是\ndata: 示\ndata: 例\ndata: 输出\ndata: ：\ndata: \ndata: \ndata: ``\ndata: `\ndata: \ndata:  \ndata: total\ndata: \ndata: used\ndata: \ndata: free\ndata: \ndata: shared\ndata: \ndata: buff\ndata: /cache\ndata: \ndata: available\ndata:\ndata: \ndata: Mem\ndata: :\ndata:  \ndata: \ndata: 7\ndata: .\ndata: 7\ndata: Gi\ndata: \ndata: \ndata: 1\ndata: .\ndata: 0\ndata: Gi\ndata: \ndata: \ndata: 3\ndata: .\ndata: 5\ndata: Gi\ndata: \ndata: \ndata: 537\ndata: Mi\ndata: \ndata: \ndata: 3\ndata: .\ndata: 1\ndata: Gi\ndata: \ndata: \ndata: 6\ndata: .\ndata: 1\ndata: Gi\ndata: \ndata: \ndata: Swap\ndata: :\ndata: \ntype=json\nPython\ndata: {\"success\": \"true\", \"msg\": \":\\n\\n\"}\ndata: {\"success\": \"true\", \"msg\": \"``\"}\ndata: {\"success\": \"true\", \"msg\": \"`\\n\"}\ndata: {\"success\": \"true\", \"msg\": \"The\"}\ndata: {\"success\": \"true\", \"msg\": \" sum\"}\ndata: {\"success\": \"true\", \"msg\": \" from\"}\ndata: {\"success\": \"true\", \"msg\": \" \"}\ndata: {\"success\": \"true\", \"msg\": \"1\"}\ndata: {\"success\": \"true\", \"msg\": \" to\"}\ndata: {\"success\": \"true\", \"msg\": \" \"}\ndata: {\"success\": \"true\", \"msg\": \"100\"}\ndata: {\"success\": \"true\", \"msg\": \" is\"}\ndata: {\"success\": \"true\", \"msg\": \":\"}\ndata: {\"success\": \"true\", \"msg\": \" \"}\ndata: {\"success\": \"true\", \"msg\": \" \"}\ndata: {\"success\": \"true\", \"msg\": \"505\"}\ndata: {\"success\": \"true\", \"msg\": \"0\"}\ndata: {\"success\": \"true\", \"msg\": \"\\n\"}\ndata: {\"success\": \"false\", \"msg\": \"失败原因\"}\n3.2.3 completions（deprecated, 请用3.2.4接口）\nRef to: https://platform.openai.com/docs/api-reference/completions/create\n请求\nPath: /v1/openai/v1/completions\nPath: /v1/openai/v2/completions\ncurl 调用\nJavaScript\ncurl --request POST \\\n --url http://ecs.sv.us.alles-apin.openxlab.org.cn/v1/openai/v1/completions \\\n --header 'content-type: application/json' \\\n --data '{\n \"model\": \"text-davinci-003\",\n \"prompt\": \"请帮我作一首诗\",\n \"max_tokens\": 16,\n \"temperature\": 1,\n \"n\": 1,\n \"echo\": false\n}'\npython 调用\nPowerShell\nimport requests\nimport json\nurl = \"http://ecs.sv.us.alles-apin.openxlab.org.cn/v1/openai/v1/completions\"\nheaders = {\"content-type\": \"application/json\"}\npayload = {\n \"model\": \"text-davinci-003\",\n \"prompt\": \"请帮我作一首诗\", \n \"max_tokens\": 16,\n \"temperature\": 1,\n \"n\": 1,\n \"echo\": False\n}\nresponse = requests.post(url, headers=headers, data=json.dumps(payload))\nprint(response.json())\n说明\nmodel-选填: text-davinci-003（default）, text-davinci-002, text-curie-001, text-babbage-001, text-ada-001\nprompt-必填： 用户输入词（必填）\nmax_tokens-选填: 模型返回最大tokens，默认16。（绝大部分模型支持最大2048个token，部分最新模型支持4096个token） \ntemperature-选填: 0-2， 默认1\nn-选填: 每次prompt生成多少个completions，默认1\necho-选填：默认为false，如果设置为true，则prompt会在返回的text里被添加上\n其他参数选填，key值和对应的value可参考这里\n返回\nJSON\n{\n \"msg\": \"ok\",\n \"msgCode\": \"10000\",\n \"data\": {\n \"id\": \"cmpl-7IrFGNeXrIYVz83NHtD5nHGc0xHWJ\",\n \"object\": \"text_completion\",\n \"created\": 1684728934,\n \"model\": \"text-davinci-003\",\n \"choices\": [\n  {\n  \"text\": \"\\n\\n月光如水滑溜\", # echo=false\n  \"index\": 0,\n  \"logprobs\": null,\n  \"finish_reason\": \"length\"\n  }\n ],\n \"usage\": {\n  \"prompt_tokens\": 13,\n  \"completion_tokens\": 15,\n  \"total_tokens\": 28\n }\n }\n}\n{\n \"msg\": \"ok\",\n \"msgCode\": \"10000\",\n \"data\": {\n \"id\": \"cmpl-7IrIRi6eKfYJuXvBYGyvNBs4S94UB\",\n \"object\": \"text_completion\",\n \"created\": 1684729131,\n \"model\": \"text-davinci-003\",\n \"choices\": [\n  {\n  \"text\": \"请帮我作一首诗\\n\\n行走江湖几\", #echo=true\n  \"index\": 0,\n  \"logprobs\": null,\n  \"finish_reason\": \"length\"\n  }\n ],\n \"usage\": {\n  \"prompt_tokens\": 13,\n  \"completion_tokens\": 15,\n  \"total_tokens\": 28\n }\n }\n}\n3.2.4 chat-completion-v2\n说明\nv2版本的入参完全follow OpenAI 的 create chat completion api\n请求\nPath: /v1/openai/v2/text/chat\nPath: /v1/openai/v2/chat/completions\ncurl 调用\nJavaScript\ncurl --request POST \\\n --url https://openxlab.org.cn/gw/alles-apin-hub/v1/openai/v2/text/chat \\\n --header 'content-type: application/json' \\\n --data '{\n \"model\": \"gpt-3.5-turbo\",\n \"messages\": [\n {\n  \"role\": \"user\",\n  \"content\": \"你将要扮演macos shell，返回我输入命令的执行结果，听懂的话，返回我听懂了\"\n },\n {\n  \"role\": \"assistant\",\n  \"content\": \"好的，我准备好了。请告诉我要执行的命令。\"\n },\n {\n  \"role\": \"user\",\n  \"content\": \"free -hm\"\n },\n {\n  \"role\": \"assistant\",\n  \"content\": \"这个命令可以列出所有的进程信息。您想要我将命令的输出信息展示给您吗？\"\n }\n ]\n}'\npython 调用\nPowerShell\nimport requests\nimport json\nurl = \"http://ecs.sv.us.alles-apin.openxlab.org.cn/v1/openai/v2/text/chat\"\nheaders = {\"content-type\": \"application/json\"}\npayload = {\n \"model\": \"gpt-3.5-turbo\",\n \"messages\": [\n {\n  \"role\": \"user\",\n  \"content\": \"你将要扮演macos shell，返回我输入命令的执行结果，听懂的话，返回我听懂了\"\n },\n {\n  \"role\": \"assistant\",\n  \"content\": \"好的，我准备好了。请告诉我要执行的命令。\"\n },\n {\n  \"role\": \"user\",\n  \"content\": \"free -hm\"\n },\n {\n  \"role\": \"assistant\",\n  \"content\": \"这个命令可以列出所有的进程信息。您想要我将命令的输出信息展示给您吗？\"\n }\n ]\n}\nresponse = requests.post(url, headers=headers, data=json.dumps(payload))\nprint(response.json())\n参数说明\nmodel: optional\ngpt-3.5-turbo（default）\ngpt-3.5-turbo-0301\ngpt-4\nrole_meta(Optional):若填，则 user_name=user / system, bot_name=assistant\nmessages：是一个数组，按照时间顺序从早到晚排列，send_type=user表示用户输入，send_type=bot表示模型返回。messages数组的数据来自于返回body的data.choices[0].message + 用户输入的prompt\ntemperature(Optional): 浮点数（取值范围：0-1.0），表示随机度，默认为1，越接近1返回越随机\nmax_tokens(Optional): \ntop_p(Optional): 默认取1\nn(Optional): 默认取1\npresence_penalty(Optional): 默认取0. 取值范围：[-2.0, 2.0]\nfrequency_penalty(Optional): 默认取0. 取值范围：[-2.0, 2.0]\ntimeout(Optional): 默认取600，单位s\n[]functions(Optional): 与OpenAI参数保持一致\nfunction_call(Optional): 与OpenAI参数保持一致\nlogit_bias(Optioanl): 与OpenAI参数保持一致\nlogprobs(Optional): 与OpenAI参数保持一致\ntop_logprobs(Optional): 与OpenAI参数保持一致\nseed(Optional): 与OpenAI参数保持一致\n[]tools(Optional): 与OpenAI参数保持一致\ntool_choice(Optional): 与OpenAI参数保持一致\nuser(Optional): 与OpenAI参数保持一致\n返回\nJSON\n{\n \"msg\": \"ok\",\n \"msgCode\": \"10000\",\n \"data\": {\n \"id\": \"chatcmpl-7GMah9SoXRZLaUA7CfgxqowZ4coKz\",\n \"object\": \"chat.completion\",\n \"created\": 1684134443,\n \"model\": \"gpt-3.5-turbo-0301\",\n \"usage\": {\n  \"prompt_tokens\": 123,\n  \"completion_tokens\": 52,\n  \"total_tokens\": 175\n },\n \"choices\": [\n  {\n  \"message\": {\n   \"role\": \"assistant\",\n   \"content\": \"这个命令可以显示当前系统的内存使用情况，以M为单位。请用终端执行该命令，并将命令的输出信息发送给我，我会帮您解读。\"\n  },\n  \"finish_reason\": \"stop\",\n  \"index\": 0\n  }\n ]\n }\n}\n3.2.5 Assistants功能（申请使用制）\n说明\n包含OpenAI的一批接口（Assistants接口和Files接口）\n请求\ncurl调用\nJavaScript\ncurl --location 'https://openxlab.org.cn/gw/alles-apin-hub/v1/openai/v1/assistants' \\\n--header 'alles-apin-token: {token}' \\\n--header 'OpenAI-Beta: assistants=v1' \\\n--header 'Content-Type: application/json' \\\n--header 'key-sign: {key-sign}' \\\n--data '{\n \"instructions\": \"You are a personal math tutor. When asked a question, write and run Python code to answer the question.\",\n \"name\": \"Math Tutor\",\n \"tools\": [\n {\n  \"type\": \"code_interpreter\"\n }\n ],\n \"model\": \"gpt-3.5-turbo\"\n}'\npython调用\nPython\nimport requests\nurl = \"https://openxlab.org.cn/gw/alles-apin-hub/v1/openai/v1/assistants/asst_baqHXzaom8O28eSetf0IG2H7\"\npayload = \"\"\nheaders = {\n 'alles-apin-token': '{token}',\n 'OpenAI-Beta': 'assistants=v1',\n 'key-sign': '{key-sign}'\n}\nresponse = requests.request(\"GET\", url, headers=headers, data=payload)\nprint(response.text)\n请求参数说明\nURL \n固定以调用域名 (https://openxlab.org.cn/gw/alles-apin-hub/v1/openai) +OpenAI path(/v1/assistants)组成.\n请求Headers\nalles-apin-token \n调用token\nOpenAI-Beta (optional)\nOpenAI要求的调用头部，若使用assistants功能，此处固定取值：assistants=v1\nkey-sign (optional)\n首次调用时无需指定，后续调用时需要使用此字段关联OpenAI组织（因为目前alles-apin内部维护了多个组织，跨组织时会导致已创建的assistants/threads/messages/files无法获取）\n获取方式：在发起create类请求后，会在response中返回此字段取值。\n请求method\n和原接口method保持完全一致\n请求body\n和原接口中body保持完全一致\n返回\nJSON\n{\n \"statusCode\": 200,\n \"headers\": {\n \"date\": \"Wed, 29 Nov 2023 02:47:45 GMT\",\n \"content-type\": \"application/json\",\n \"transfer-encoding\": \"chunked\",\n \"connection\": \"keep-alive\",\n \"openai-version\": \"2020-10-01\",\n \"openai-organization\": \"lab-ge\",\n \"x-request-id\": \"20216f192a9e0b351ed1858111f5feed\",\n \"openai-processing-ms\": \"89\",\n \"strict-transport-security\": \"max-age=15724800; includeSubDomains\",\n \"cf-cache-status\": \"DYNAMIC\",\n \"set-cookie\": \"__cf_bm=RJiSXQk0NjjKezjHkHdQt9Ts9vFX9qpSy614eZ3AMyo-1701226065-0-AZx2jGFneWCHZ8NE3ybVZ8chJqHuaZwmAK1AponR+9ZomAr+ef1uprGu2qICgHpnyrzKIMU1/OXF+jgYcya+y0A=; path=/; expires=Wed, 29-Nov-23 03:17:45 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None, _cfuvid=Y9o5ndCuXEB1PpYPDiS35b2ngiy4ZlqKVETgLtpIJJE-1701226065736-0-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None\",\n \"server\": \"cloudflare\",\n \"cf-ray\": \"82d7871d0abe20ed-HKG\",\n \"content-encoding\": \"br\",\n \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\"\n },\n \"body\": {\n \"object\": \"list\",\n \"data\": [\n  {\n  \"id\": \"asst_kXTx2JYIS55qbufJaWBbmMtB\",\n  \"object\": \"assistant\",\n  \"created_at\": 1701159211,\n  \"name\": \"Math Tutor\",\n  \"description\": null,\n  \"model\": \"gpt-3.5-turbo\",\n  \"instructions\": \"You are a personal math tutor. When asked a question, write and run Python code to answer the question.\",\n  \"tools\": [\n   {\n   \"type\": \"code_interpreter\"\n   }\n  ],\n  \"file_ids\": [],\n  \"metadata\": {}\n  }\n ],\n \"first_id\": \"asst_kXTx2JYIS55qbufJaWBbmMtB\",\n \"last_id\": \"asst_z6q70DCERhqLwB4jwxG5S6if\",\n \"has_more\": false\n },\n \"msg\": \"ok\",\n \"data\": {\n \"key-sign\": \"g3-w6JsZ7\"\n }\n}\n说明\nstatusCode \nOpenAI的请求返回状态码，200表示正确返回\nheaders\nOpenAI的请求返回头部\nbody\n与具体接口的返回body保持一致\nmsg\n错误说明，ok表示系统服务正常\ndata 其他相关字段\nkey-sign \n关联调用时需要使用此字段关联OpenAI组织（因为目前alles-apin内部维护了多个组织，跨组织时会导致已创建的assistants/threads/messages/files无法获取）\n3.3 Google\n3.3.1 Chat \nRef to: https://developers.generativeai.google/api/rest/generativelanguage/models/generateMessage\n请求\nPath: /v1/google/v1/palm/chat\ncurl 调用\nJavaScript\ncurl --request POST \\\n --url https://openxlab.org.cn/gw/alles-apin-hub/v1/google/v1/palm/chat \\\n --header 'content-type: application/json' \\\n --data '{\n \"model\": \"chat-bison-001\",\n \"prompt\": {\n \"messages\": [\n  {\n  \"content\": \"hi\",\n  \"author\": \"xj\"\n  },\n  {\n  \"author\": \"1\",\n  \"content\": \"Hi! How can I help you today?\"\n  },\n  {\n  \"author\": \"xj\",\n  \"content\": \"I feel bad. Inspire me please\"\n  }\n ]\n },\n \"temperature\": 1,\n \"candidate_count\": 2\n}'\npython 调用\nPython\nimport requests\nurl = \"https://openxlab.org.cn/gw/alles-apin-hub/v1/google/v1/palm/chat\"\nheaders = {\"content-type\": \"application/json\"}\ndata = {\n \"model\": \"chat-bison-001\",\n \"prompt\": {\n \"messages\": [\n  {\n  \"content\": \"hi\",\n  \"author\": \"xj\"\n  },\n  {\n  \"author\": \"1\",\n  \"content\": \"Hi! How can I help you today?\"\n  },\n  {\n  \"author\": \"xj\",\n  \"content\": \"I feel bad. Inspire me please\"\n  }\n ]\n },\n \"temperature\": 1,\n \"candidate_count\": 2\n}\nresponse = requests.post(url, json=data, headers=headers)\nprint(response.json())\n说明\nmodel-选填: chat-bison-001（default, inputTokenLimit: 4096）\nprompt-必填： 用户输入词（必填，模型不支持中文prompt，如需中文支持，可使用3.5.1 baidu translate 转换成英文后再次调用）\nmessages：是一个列表，支持上下文\ncontent：交互的文本\nauthor：用户方默认是0（可自定义），大模型方是1\ntemperature：范围 [0.0, 1.0]，默认 0.1（越高模型返回的文本越随机）\ncandidate_count: 范围 [1, 8]，默认 1， 每次大模型返回的文本个数（针对单次用户的prompt）\n返回\nJSON\n{\n \"msg\": \"ok\",\n \"msgCode\": \"10000\",\n \"data\": {\n \"candidates\": [\n  {\n  \"author\": \"1\",\n  \"content\": \"I'm sorry to hear that you're feeling bad. I know it can be tough sometimes, but I want you to know that you're not alone. Everyone goes through tough times, and it's important to remember that it's okay to not be okay.\\n\\nThe best thing you can do is to reach out for help. Talk to a friend, family member, or therapist. You can also try journaling, meditating, or doing something else that you find relaxing. It's important to take care of yourself during this time.\\n\\nRemember that you're strong and capable, and you will get through this. Just take things one day at a time, and don't be afraid to ask for help when you need it.\\n\\nHere are some quotes that might inspire you:\\n\\n* \\\"The greatest glory in living lies not in never falling, but in rising every time we fall.\\\" - Nelson Mandela\\n* \\\"It is during our darkest moments that we must focus to see the light.\\\" - Aristotle Onassis\\n* \\\"The only way to do great work is to love what you do.\\\" - Steve Jobs\\n* \\\"If you can dream it, you can do it.\\\" - Walt Disney\\n* \\\"The best way to predict the future is to create it.\\\" - Abraham Lincoln\\n\\nI hope these quotes help to inspire you. Remember, you are not alone, and you are strong. You will get through this.\"\n  },\n  {\n  \"author\": \"1\",\n  \"content\": \"I'm sorry you feel bad. I can try to inspire you with a few quotes.\\n\\n\\\"The best way to predict the future is to create it.\\\" - Abraham Lincoln\\n\\n\\\"The future belongs to those who believe in the beauty of their dreams.\\\" - Eleanor Roosevelt\\n\\n\\\"The only way to do great work is to love what you do.\\\" - Steve Jobs\\n\\n\\\"If you can dream it, you can do it.\\\" - Walt Disney\\n\\n\\\"The only thing standing in your way is yourself.\\\" - Unknown\\n\\n\\\"The best way to find yourself is to lose yourself in the service of others.\\\" - Mahatma Gandhi\\n\\n\\\"The greatest glory in living lies not in never falling, but in rising every time we fall.\\\" - Nelson Mandela\\n\\nI hope these quotes inspire you to keep going and to achieve your dreams.\",\n  \"citationMetadata\": {\n   \"citationSources\": [\n   {\n    \"startIndex\": 70,\n    \"endIndex\": 237,\n    \"uri\": \"https://m.facebook.com/victor.osaikh.7\"\n   },\n   {\n    \"startIndex\": 143,\n    \"endIndex\": 288,\n    \"uri\": \"https://funny-wish.com/160-all-the-best-for-your-new-job-quotes/\"\n   }\n   ]\n  }\n  }\n ]\n }\n}\n3.3.2 Text\nRef to: https://developers.generativeai.google/api/rest/generativelanguage/models/generateText\n请求\nPath: /v1/google/v1/palm/text\ncurl 调用\nJavaScript\ncurl --request POST \\\n --url https://openxlab.org.cn/gw/alles-apin-hub/v1/google/v1/palm/text \\\n --header 'content-type: application/json' \\\n --data '{\n \"prompt\": {\n \"text\": \"tell me a funny joke\"\n },\n \"temperature\": 1,\n \"candidate_count\": 2,\n \"max_output_tokens\": 1024,\n \"safety_settings\": [{\n \"category\": \"HARM_CATEGORY_UNSPECIFIED\",\n \"threshold\": \"HARM_BLOCK_THRESHOLD_UNSPECIFIED\"\n }]\n}'\npython 调用\nPowerShell\nimport requests\nurl = \"https://openxlab.org.cn/gw/alles-apin-hub/v1/google/v1/palm/text\"\npayload = {\n \"prompt\": {\n \"text\": \"tell me a funny joke\"\n },\n \"temperature\": 1,\n \"candidate_count\": 2,\n \"max_output_tokens\": 1024\n}\nheaders = {\n \"Content-Type\": \"application/json\"\n}\nresponse = requests.post(url, json=payload, headers=headers)\nprint(response.json())\n说明\nmodel(选填): text-bison-001(default, inputTokenLimit: 8196)\nprompt-必填： 用户输入词（必填）\ntext：prompt\ntemperature：范围 [0.0, 1.0]，默认 0.1（越高模型返回的文本越随机）\ncandidate_count: 范围 [1, 8]，默认 1， 每次大模型返回的文本个数（针对单次用户的prompt）\nmax_output_tokens（选填）：默认1024\n[]safety_settings(选填): 用于阻止一些不安全内容，默认内容不限制、阈值不限制\ncategory 枚举字符串，不安全内容分类\nHARM_CATEGORY_UNSPECIFIED 不限制\nHARM_CATEGORY_DEROGATORY 限制针对性的负面或有害评论\nHARM_CATEGORY_TOXICITY 限制粗鲁内容\nHARM_CATEGORY_VIOLENCE 限制暴力内容\nHARM_CATEGORY_SEXUAL 限制性内容\nHARM_CATEGORY_MEDICAL 限制医疗性内容\nHARM_CATEGORY_DANGEROUS 限制有害行为诱导\nthreshold 枚举字符串，不安全内容阈值\nHARM_BLOCK_THRESHOLD_UNSPECIFIED 未指定\nBLOCK_LOW_AND_ABOVE 允许包含NEGLIGIBLE的内容\nBLOCK_MEDIUM_AND_ABOVE 允许包含NEGLIGIBLE和LOW的内容\nBLOCK_ONLY_HIGH 允许包含 NEGLIGIBLE、LOW 和 MEDIUM 的内容\nBLOCK_NONE 所有阈值都允许\n返回\nJSON\n{\n \"msg\": \"ok\",\n \"msgCode\": \"10000\",\n \"data\": {\n \"candidates\": [\n  {\n  \"output\": \"A guy walks into a bar and orders a drink. As he sits there, he hears a high-pitched voice say, \\\"Hey, those jeans look really great on you!\\\"\\nThe man looks around but sees nothing. He then returns to his drink thinking nothing more of it. But then, a moment later, he hears the same voice again, \\\"I really like what you have done with your hair!\\\"\\nThe man again glances around but sees nothing. Now he wonders if should visit a doctor as he clearly seems to be hallucinating. He calmes himself down but then as he believes the voice is gone, he hears, \\\"You seem like an awesome person!\\\"\\nHe puts his drink down, completely scared and looks around wildly. Still unable to find the source of the voice, he calls over to the bartender, \\\"Hey! What's that voice I keep hearing?\\\"\\n\\\"Those are the peanuts,\\\" the bartender replies. \\\"They're complimentary.\\\"\",\n  \"safetyRatings\": [\n   {\n   \"category\": \"HARM_CATEGORY_DEROGATORY\",\n   \"probability\": \"NEGLIGIBLE\"\n   },\n   {\n   \"category\": \"HARM_CATEGORY_TOXICITY\",\n   \"probability\": \"NEGLIGIBLE\"\n   },\n   {\n   \"category\": \"HARM_CATEGORY_VIOLENCE\",\n   \"probability\": \"NEGLIGIBLE\"\n   },\n   {\n   \"category\": \"HARM_CATEGORY_SEXUAL\",\n   \"probability\": \"NEGLIGIBLE\"\n   },\n   {\n   \"category\": \"HARM_CATEGORY_MEDICAL\",\n   \"probability\": \"NEGLIGIBLE\"\n   },\n   {\n   \"category\": \"HARM_CATEGORY_DANGEROUS\",\n   \"probability\": \"NEGLIGIBLE\"\n   }\n  ]\n  },\n  {\n  \"output\": \"A guy walks into a bar and orders a beer. As he sits there, he hears a high-pitched voice say, \\\"Hey, those jeans look really great on you!”\\nThe man looks around but sees nothing. He then returns to his beer. But then, a moment later, he hears the same voice again, “I really like what you have done with your hair!”\\nThe man again glances around but sees nothing. Now he wonders if should visit a doctor as he clearly seems to be hallucinating. He calmes himself down but then as he believes the voice is gone, he hears, “You seem like an awesome person!”\\nHe puts his beer down, completely scared and looks around wildly. Still unable to find the source of the voice, he calls over to the bartender, “Hey! What’s that voice I keep hearing?”\\n“Those are the peanuts,” the bartender replies. “They’re complimentary.”\",\n  \"safetyRatings\": [\n   {\n   \"category\": \"HARM_CATEGORY_DEROGATORY\",\n   \"probability\": \"NEGLIGIBLE\"\n   },\n   {\n   \"category\": \"HARM_CATEGORY_TOXICITY\",\n   \"probability\": \"NEGLIGIBLE\"\n   },\n   {\n   \"category\": \"HARM_CATEGORY_VIOLENCE\",\n   \"probability\": \"NEGLIGIBLE\"\n   },\n   {\n   \"category\": \"HARM_CATEGORY_SEXUAL\",\n   \"probability\": \"NEGLIGIBLE\"\n   },\n   {\n   \"category\": \"HARM_CATEGORY_MEDICAL\",\n   \"probability\": \"NEGLIGIBLE\"\n   },\n   {\n   \"category\": \"HARM_CATEGORY_DANGEROUS\",\n   \"probability\": \"NEGLIGIBLE\"\n   }\n  ]\n  }\n ]\n }\n}\n3.3.3 Gemini\nRef to: https://ai.google.dev/tutorials/rest_quickstart#gemini_and_content_based_apis\n请求\nPath: /v1/google/v1/gemini/generate_content\ncurl 调用\nJavaScript\ncurl --location 'https://openxlab.org.cn/gw/alles-apin-hub/v1/google/v1/gemini/generate_content' \\\n--header 'alles-apin-token: {token}' \\\n--header 'Content-Type: application/json' \\\n--data '{\n \"contents\": [\n {\n  \"parts\": [\n  {\n   \"text\": \"Are you gemini-pro model?\"\n  }\n  ]\n }\n ],\n \"model\": \"gemini-pro\",\n \"generationConfig\": {\n \"candidate_count\": 1\n }\n}'\npython 调用\nPowerShell\nimport requests\nimport json\nurl = \"https://openxlab.org.cn/gw/alles-apin-hub/v1/google/v1/gemini/generate_content\"\npayload = json.dumps({\n \"contents\": [\n {\n \"parts\": [\n {\n  \"text\": \"Are you gemini-pro model?\"\n }\n ]\n }\n ],\n \"model\": \"gemini-pro\",\n \"generationConfig\": {\n \"candidate_count\": 1\n }\n})\nheaders = {\n 'alles-apin-token': 'token',\n 'Content-Type': 'application/json'\n}\nresponse = requests.request(\"POST\", url, headers=headers, data=payload)\nprint(response.text)\n说明\nmodel(必填): gemini模型\ngemini-pro\ngemini-pro-vision\n其他参数：请点击参考\n返回\nJSON\n{\n \"statusCode\": 200,\n \"headers\": {\n \"content-type\": \"application/json; charset=UTF-8\",\n \"vary\": \"Origin, X-Origin, Referer\",\n \"content-encoding\": \"gzip\",\n \"date\": \"Mon, 29 Jan 2024 11:12:05 GMT\",\n \"server\": \"scaffolding on HTTPServer2\",\n \"cache-control\": \"private\",\n \"x-xss-protection\": \"0\",\n \"x-frame-options\": \"SAMEORIGIN\",\n \"x-content-type-options\": \"nosniff\",\n \"server-timing\": \"gfet4t7; dur=1735\",\n \"alt-svc\": \"h3=\\\":443\\\"; ma=2592000,h3-29=\\\":443\\\"; ma=2592000\",\n \"transfer-encoding\": \"chunked\"\n },\n \"body\": {\n \"candidates\": [\n  {\n  \"content\": {\n   \"parts\": [\n   {\n    \"text\": \"As a large language model, I am developed in Google.\"\n   }\n   ],\n   \"role\": \"model\"\n  },\n  \"finishReason\": \"STOP\",\n  \"index\": 0,\n  \"safetyRatings\": [\n   {\n   \"category\": \"HARM_CATEGORY_SEXUALLY_EXPLICIT\",\n   \"probability\": \"NEGLIGIBLE\"\n   },\n   {\n   \"category\": \"HARM_CATEGORY_HATE_SPEECH\",\n   \"probability\": \"NEGLIGIBLE\"\n   },\n   {\n   \"category\": \"HARM_CATEGORY_HARASSMENT\",\n   \"probability\": \"NEGLIGIBLE\"\n   },\n   {\n   \"category\": \"HARM_CATEGORY_DANGEROUS_CONTENT\",\n   \"probability\": \"NEGLIGIBLE\"\n   }\n  ]\n  }\n ],\n \"promptFeedback\": {\n  \"safetyRatings\": [\n  {\n   \"category\": \"HARM_CATEGORY_SEXUALLY_EXPLICIT\",\n   \"probability\": \"NEGLIGIBLE\"\n  },\n  {\n   \"category\": \"HARM_CATEGORY_HATE_SPEECH\",\n   \"probability\": \"NEGLIGIBLE\"\n  },\n  {\n   \"category\": \"HARM_CATEGORY_HARASSMENT\",\n   \"probability\": \"NEGLIGIBLE\"\n  },\n  {\n   \"category\": \"HARM_CATEGORY_DANGEROUS_CONTENT\",\n   \"probability\": \"NEGLIGIBLE\"\n  }\n  ]\n }\n },\n \"msg\": \"ok\",\n \"data\": {}\n}\n3.4 Claude\n3.4.1 Claude by slack bot(deprecated)\n请求\ncurl 调用\nPowerShell\ncurl --request POST \\\n --url http://ecs.sv.us.alles-apin.openxlab.org.cn/v1/claude/v1/text/chat_by_slack \\\n --header 'content-type: application/json' \\\n --data '{\n \"prompt\": \"（在开始我们的对话前，请清空之前的对话）如何看待“996是福报？“\",\n \"appid\": \"STRING\",\n \"token\": \"STRING\"\n}'\npython 调用\nPowerShell\nimport requests\nimport json\nheaders = {'Content-Type': 'application/json'}\npayload = {\n \"prompt\": \"（在开始我们的对话前，请清空之前的对话）如何看待“996是福报？”\",\n \"appid\": \"\",\n \"token\":\"\"\n}\nresponse = requests.post('http://ecs.sv.us.alles-apin.openxlab.org.cn/v1/cl\naude/v1/text/chat_by_slack', headers=headers, data=json.dumps(payload))\nprint(response.status_code)\nprint(response.json())\n说明\nprompt: 默认会带上context，如果不需要上下文，可在prompt加上“（在开始我们的对话前，请清空之前的对话）” 。（需要关注下：并发时，是否会导致返回错误）\nappid（Optional）可填入自己申请的Claude appid\ntoken (Optional) 可填入自己申请的Claude token\n返回\nJSON\n{\n \"msg\": \"ok\",\n \"msgCode\": \"10000\",\n \"data\": \" “996是福报”这一说法存在较大争议:\\n\\n1. 正面:从某个角度来说,996工作制度可以 maximizing地发挥员工的工作热情,有利于公司的高效运转和快速发展。在当前社会环境下,有些人会将工作中的高强度与长时间视为一种主动和积极的工作态度,以及事业发展的机会。\\n\\n2. 负面:但是,996工作制度同时也存在着严重的弊端:\\n\\n1) 违反劳动法规定的工时标准,损害员工权益。高强度的工作容易导致身心疲惫和健康问题。\\n\\n2) 工作生活失衡,影响生活质量。长期的高强度工作很难维持工作热情,容易产生倦怠和减少工作效率。 \\n\\n3) 不利于创新。过度追求高强度工作,会减少休息与思考的时间,不利于创新能力的发展。\\n\\n4) 忽视生产力的可持续发展。过分依赖996并不能真正提高生产率,长此以往会损害劳动力资源与生产力的可持续发展。\\n\\n3. 两面性:所以,“996是福报”这一说法具有一定的主观合理性,但客观上也存在许多需要修正的地方。它 failed to看到劳动力资源的长期发展,忽视了企业真正的核心竞争力来自科技创新与管理创新,而非过度消耗员工。一个先进的现代企业,应更加重视知识型员工的工作效率与生产率,给予员工足够的休息与自主时间,研发符合企业发展的科学管理方法,这些才是真正的竞争优势所在。\\n\\n综上,“996是福报”这一说法存在一定的主观合理性,但客观上还是具有较大的争议,需要在实际情况中结合企业的长远发展与员工的权益进行合理判断。一个现代化的企业,其核心竞争力在于科技与管理的不断创新,而并非简单的加班加点。这也需要企业家与员工达成更加理性的认知。\"\n}\n3.4.2 Claude by anthropic\n请求\ncurl 调用\nShell\ncurl --location 'https://openxlab.org.cn/gw/alles-apin-hub/v1/claude/v1/text/chat' \\\n--header 'alles-apin-token: token' \\\n--header 'Content-Type: application/json' \\\n--data '{\n \"model\": \"claude-1\",\n \"max_tokens\": 500,\n \"messages\": [{\n \"role\": \"user\",\n \"content\": \"hello\"\n },{\n \"role\": \"bot\",\n \"content\": \"Hello! My name is Claude. Nice to meet you!\"\n }, {\n \"role\": \"user\",\n \"content\": \"请预测未来世界形势\"\n }]\n}'\npython 调用\nPython\nimport requests\nimport json\nurl = \"https://openxlab.org.cn/gw/alles-apin-hub/v1/claude/v1/text/chat\"\npayload = json.dumps({\n \"prompt\": \"你可以做什么\",\n \"model\": \"claude-1\",\n \"max_tokens\": 500\n})\nheaders = {\n 'alles-apin-token': 'token',\n 'Content-Type': 'application/json'\n}\nresponse = requests.request(\"POST\", url, headers=headers, data=payload)\nprint(response.text)\n说明\nprompt(Optional): prompt\nmodel(Optional): 使用模型，枚举字符串\nclaude-instant-1 （默认值）\nclaude-2\nmax_tokens(Optional): 整型，返回的tokens最大长度，默认为300\ntemperature(Optional): 浮点数（取值范围：0-1.0），表示随机度，默认为1，越接近1返回越随机\n[]messages(Optional): 上下文维持，与prompt参数两者必填其一，且messages优先级更高\nrole 枚举字符串\nuser\nbot\nsystem(Optional): 根据官方文档，目前仅支持cluade-2.1, 上下文中有且仅有单个system prompt\ncontent 内容\n返回\nJSON\n{\n \"msg\": \"ok\",\n \"msgCode\": \"10000\",\n \"data\": {\n \"completion\": \" 我是 Claude,一款人工智能助手。我可以:\\n\\n• 回答各种知识问答,例如历史事件,科学现象等。\\n\\n• 进行简单的对话,了解你的需求并尽量解答你的疑问。\\n\\n• 给出建议和推荐,例如推荐好的电影,书籍,美食等。\\n\\n• 执行一些基本的搜索任务,例如在网上查找一些信息。\\n\\n• 完成一些日常任务提醒或管理,例如设置闹钟,提醒事件等。\\n\\n• 讲一些笑话或有趣的事情,让交流变得更轻松和有趣。\\n\\n但是我有一定的限制和局限性,比如:\\n\\n• 我没有真实的身体,所以无法进行物理交互,也无法操控实体物品。\\n\\n• 我的知识和能力是有限的,有很多问题我可能无法准确解答或解决。\\n\\n• 我无法完全理解人的情感和意图,所以在涉及到这些方面的交流上可能会有所欠缺。\\n\\n• 我需要不断学习和提高,所以在新领域的问题上,我的表现可能不如在熟悉领域的问题上流畅和准确。\\n\\n我会一直努力提高自己,但人工智能毕竟还无法超越人类,所以在我们的交流中,希望您能体谅我的这些局限性。我相信随着时间的推移,人工智能会越来越智能和易于使用。\",\n \"model\": \"claude-1.3\",\n \"stop_reason\": \"stop_sequence\",\n \"stop\": \"\\n\\nHuman:\",\n \"log_id\": \"bdbf87ebfcbc7e66eed89702dfe91937\"\n }\n}\n可使用stop_reason辅助判断是否为完整返回\n3.4.3 Claude-Stream by anthropic\n必须使用外网域名访问\n请求\ncurl 调用\nPowerShell\ncurl --location 'https://openxlab.org.cn/gw/alles-apin-hub/v1/claude/v1/text/chat-stream' \\\n--header 'alles-apin-token: token' \\\n--header 'Content-Type: application/json' \\\n--data '{\n \"model\": \"claude-1\",\n \"max_tokens\": 500,\n \"messages\": [{\n \"role\": \"user\",\n \"content\": \"hello\"\n },{\n \"role\": \"bot\",\n \"content\": \"Hello! My name is Claude. Nice to meet you!\"\n }, {\n \"role\": \"user\",\n \"content\": \"请预测未来世界形势\"\n }]\n}'\npython 调用\nPowerShell\nimport requests\nimport json\nurl = \"https://openxlab.org.cn/gw/alles-apin-hub/v1/claude/v1/text/chat-stream\"\npayload = json.dumps({\n \"prompt\": \"你可以做什么\",\n \"model\": \"claude-1\",\n \"max_tokens\": 500\n})\nheaders = {\n 'alles-apin-token': 'token',\n 'Content-Type': 'application/json'\n}\nresponse = requests.request(\"POST\", url, headers=headers, data=payload)\nfor chunk in response.iter_lines():\n print(chunk.decode('utf-8'))\n说明\nprompt(Optional): prompt\nmodel(Optional): 使用模型，枚举字符串\nclaude-instant-1 （默认值）\nclaude-2\nmax_tokens(Optional): 整型，返回的tokens最大长度，默认为300\ntemperature(Optional): 浮点数（取值范围：0-1.0），表示随机度，默认为1，越接近1返回越随机\n[]messages(Optional): 上下文维持，与prompt参数两者必填其一，且messages优先级更高\nrole 枚举字符串\nuser\nbot\nsystem(Optional): 根据官方文档，目前仅支持cluade-2.1, 上下文中有且仅有单个system prompt\ncontent 内容\n返回\nJSON\n{\"stop_reason\": \"max_tokens\", \"success\":\"true\",\"msg\":\"\"}\n{\"success\": \"true\", \"msg\": \"博\"}\n{\"success\": \"true\", \"msg\": \"略\"}\n{\"success\": \"true\", \"msg\": \"战\"}\n{\"success\": \"true\", \"msg\": \"的\"}\n{\"success\": \"true\", \"msg\": \"间\"}\n{\"success\": \"true\", \"msg\": \"国\"}\n{\"success\": \"true\", \"msg\": \"两\"}\n{\"success\": \"true\", \"msg\": \",\"}\n{\"success\": \"true\", \"msg\": \"剧\"}\n{\"success\": \"true\", \"msg\": \"加\"}\n{\"success\": \"true\", \"msg\": \"续\"}\n{\"success\": \"true\", \"msg\": \"继\"}\n{\"success\": \"true\", \"msg\": \"将\"}\n{\"success\": \"true\", \"msg\": \"抗\"}\n{\"success\": \"true\", \"msg\": \"对\"}\n{\"success\": \"true\", \"msg\": \"与\"}\n返回说明\n可使用stop_reason辅助判断是否为完整返回\n3.5 Baidu\n3.5.1 Baidu Translation（不对外）\n请求\nPath: /v1/baidu/v1/trans/general\ncurl 调用\nPowerShell\ncurl --request POST \\\n --url curl --request POST \\\n --url https://openxlab.org.cn/gw/alles-apin-hub/v1/minimax/v1/text/chat-stream \\\n --header 'alles-apin-token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoxLCJ1c2VybmFtZSI6Inh1anVuIiwiYXBwbHlfYXQiOjE2ODU0MzIyNTEwNTMsImV4cCI6MTg2Njg3MjI1MX0.J5gCD0yLYkKOmQKDNzidG3FsPz1V0TErn3xASA6m0-0' \\\n --header 'content-type: application/json' \\\n --data '{\n \"q\": \"胸有成竹\",\n \"frm\": \"auto\",\n \"to\": \"en\"\n}'\npython 调用\nPowerShell\nimport requests\nimport json\nurl = \"https://openxlab.org.cn/gw/alles-apin-hub/v1/baidu/v1/trans/general\"\nheaders = {\n \"Content-Type\": \"application/json\",\n \"alles-apin-token\": \"xxxxxxxxxxxx\"\n}\ndata = {\n \"q\": \"胸有成竹\",\n \"frm\": \"auto\",\n \"to\": \"en\"\n}\nresponse = requests.post(url, headers=headers, data=json.dumps(data))\nresponse_data = response.json()\n# 处理响应数据\n# TODO: 根据需要进行进一步处理\nprint(response_data)\n返回\nPowerShell\n{\n \"msg\": \"ok\",\n \"msgCode\": \"10000\",\n \"data\": {\n \"from\": \"zh\",\n \"to\": \"en\",\n \"trans_result\": [\n  {\n  \"src\": \"胸有成竹\",\n  \"dst\": \"Having a clear plan in mind\"\n  }\n ]\n }\n}\n3.5.2 Baidu文心一言chat-completions（暂不可用）\n请求\nPath: /v1/baidu/v1/wenxinworkshop/chat\nRate Limit：1 QPS\ncurl 调用\nPowerShell\ncurl --request POST \\\n --url https://openxlab.org.cn/gw/alles-apin-hub/v1/baidu/v1/wenxinworkshop/chat \\\n --header 'alles-apin-token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo4LCJ1c2VybmFtZSI6ImxpdWt1aWt1biIsImFwcGx5X2F0IjoxNjg1NTE4OTY0MjA4LCJleHAiOjE4NjY5NTg5NjR9.Rb1jHeoPiYqplsn1Qk1rgPbOiNeovtCFwHa92YPR3Xo' \\\n --header 'content-type: application/json' \\\n --data '{\n \"messages\": [\n {\n  \"role\": \"user\",\n  \"content\": \"介绍下你自己\"\n },\n {\n  \"role\": \"assistant\",\n  \"content\": \"您好，我是百度研发的知识增强大语言模型，中文名是文心一言，英文名是ERNIE Bot。我能够与人对话互动，回答问题，协助创作，高效便捷地帮助人们获取信息、知识和灵感。\"\n },\n {\n  \"role\": \"user\",\n  \"content\": \"我在上海，周末可以去哪里玩？\"\n }\n ],\n \"stream\": false,\n \"user\": \"pjlab-alles-apin\"\n}'\npython 调用 \nPowerShell\n返回\nPowerShell\n# success\n{\n \"msg\": \"ok\",\n \"msgCode\": \"10000\",\n \"data\": {\n \"id\": \"as-ehhv3v0kfd\",\n \"object\": \"chat.completion\",\n \"created\": 1686228005,\n \"result\": \"上海有很多旅游景点和活动，周末可以和朋友或家人一起参观和体验。以下是一些推荐：\\n\\n1. 上海迪士尼乐园：上海迪士尼乐园是一个非常受欢迎的主题公园，适合所有年龄段的游客。\\n2. 上海野生动物园：上海野生动物园是一个大型动物园，拥有各种各样的动物，包括熊猫、老虎、狮子等。\\n3. 上海科技馆：上海科技馆是一个科学和技术的展览馆，展示了各种科学和技术的发展和应用。\\n4. 上海海洋水族馆：上海海洋水族馆是一个非常受欢迎的水族馆，展示了各种海洋生物。\\n5. 上海城市规划展示馆：上海城市规划展示馆是一个展示上海城市规划和发展历史的展览馆。\\n6. 上海博物馆：上海博物馆是一个展示上海历史和文化发展的博物馆。\\n7. 上海外滩：上海外滩是一个非常著名的旅游景点，可以欣赏到黄浦江的美景。\\n8. 上海东方明珠广播电视塔：上海东方明珠广播电视塔是上海的标志性建筑之一，可以俯瞰整个城市。\\n9. 上海新天地：上海新天地是一个时尚的购物和娱乐区，有很多餐厅、酒吧和购物中心。\\n10. 上海长风海洋世界：上海长风海洋世界是一个非常受欢迎的海洋馆，展示了各种海洋生物。\\n\\n您可以根据自己的兴趣和预算选择适合自己的景点和活动，祝您度过愉快的周末！\",\n \"need_clear_history\": false,\n \"usage\": {\n  \"prompt_tokens\": 85,\n  \"completion_tokens\": 442,\n  \"total_tokens\": 527\n }\n }\n}\n# failure\n{\n \"msg\": \"error\",\n \"msgCode\": \"-1\",\n \"data\": {\n {\n \"error_code\": 336003,\n \"error_msg\": \"the role of message with odd index in the messages must be assistant\",\n \"id\": \"as-iv230ychyb\"\n }\n }\n}\n3.6 Spark\n3.6.1 chat-completion（RestfulAPI）\n请求\nPath: /v1/xunfei/v1/spark/chat\n建议使用国内域名\ncurl调用\nBash\n$ curl --location 'https://openxlab.org.cn/gw/alles-apin-hub/v1/xunfei/v1/spark/chat' \\\n--header 'alles-apin-token: token' \\\n--header 'Content-Type: application/json' \\\n--data '{\n \"parameter\": {\n \"chat\": {\n  \"temperature\": 0.5,\n  \"max_tokens\": 1024,\n  \"chat_id\": \"user1\"\n }\n },\n \"payload\": {\n \"message\": {\n  \"text\": [\n  {\"role\": \"user\", \"content\": \"请编写一道鸡兔同笼问题（不需要解答）\"},\n  {\"role\": \"assistant\", \"content\": \"好的，这是一道经典的鸡兔同笼问题： \\n在一个大笼子里，有一些鸡和兔子。你数了数，一共有30个头，94只脚。请问，这个笼子里有多少只鸡，多少只兔子？\"},\n  {\"role\": \"user\", \"content\": \"请详细解答上面的问题\"}\n  ]\n }\n}\n}'\npython调用\nPython\nimport requests\nimport json\nurl = \"https://openxlab.org.cn/gw/alles-apin-hub/v1/xunfei/v1/spark/chat\"\npayload = json.dumps({\n \"parameter\": {\n \"chat\": {\n \"temperature\": 0.5,\n \"max_tokens\": 1024,\n \"chat_id\": \"user1\"\n }\n },\n \"payload\": {\n \"message\": {\n \"text\": [\n {\n  \"role\": \"user\",\n  \"content\": \"请编写一道鸡兔同笼问题（不需要解答）\"\n },\n {\n  \"role\": \"assistant\",\n  \"content\": \"好的，这是一道经典的鸡兔同笼问题： \\n在一个大笼子里，有一些鸡和兔子。你数了数，一共有30个头，94只脚。请问，这个笼子里有多少只鸡，多少只兔子？\"\n },\n {\n  \"role\": \"user\",\n  \"content\": \"请详细解答上面的问题\"\n }\n ]\n }\n }\n})\nheaders = {\n 'alles-apin-token': 'token',\n 'Content-Type': 'application/json'\n}\nresponse = requests.request(\"POST\", url, headers=headers, data=payload)\nprint(response.text)\n请求说明\nparameter \nchat\ntemperature(optional) 取值为[0,1],默认为0.5. 核采样阈值。用于决定结果随机性，取值越高随机性越强即相同的问题得到的不同答案的可能性越高\nmax_tokens(optional) 取值为[1,4096]，默认为2048. 模型回答的tokens的最大长度\nchat_id(optional) 用于关联用户会话\npayload\nmessage\n[]text\nrole 枚举字符串\nuser 表示是用户的问题\nassistant 表示AI的回复\ncontent 所有content的累计tokens需控制8192以内，用户和AI的对话内容\n返回\nJSON\n{\n \"msg\": \"ok\",\n \"msgCode\": \"10000\",\n \"data\": \"好的，让我们来解决这个问题。\\n\\n设鸡的数量为x,兔子的数量为y。根据题目给出的信息，我们可以列出以下两个方程：\\n\\n$x+y=30\\\\\\\\2x+4y=94$ \\n\\n得：x=13\\n\\ny=17\\n\\n所以，这个笼子里有13只鸡和17只兔子。\"\n}\n4. 参考文档\n4.0 \n4.1 文心一言\n文心一言企业服务内测版转线上邀测版说明(3).pdf\n4.2 OpenAI\nplatform.openai.com\n4.3 MiniMax \nhttps://api.minimax.chat/document/guides?id=6433f37194878d408fc8294b\nMiniMax 开放平台 - 开发指南\n4.4 Google Palm\nhttps://developers.generativeai.google/api\n4.5 星火 \n星火认知大模型服务说明 | 讯飞开放平台文档中心\n5. 需求收集（如果大家有任何需求，可以在此comment，我会记录评估排期实施）\n6. Q&A\nQ1： 为什么请求OpenAI的模型会获得非正常返回？\n典型错误举例：Your account is not active, please check your billing details on our website\n回答：\n原因 - 目前OpenAI的使用量比较大，日均能够产生接近4w-次调用。而API-KEY池的额度有限，当前使用的API-KEY失效后（包括额度超限和RPM超限等），alles-apin会自动更换到下一个API-KEY并内部自动重试一次（使用者不感知）。当本次重试仍然失败时，就会产生非正常返回。\n解决方式 - 在代码内捕获非正常返回，并进行请求重试（不建议高并发访问）。\nQ2： 目前对不同大模型的请求是否有限制？\n回答：\n目前每个用户对一类大模型（指OpenAI, Claude, Spark等大类）的默认RPM限制为30（若有需要，请联系PM：@葛佳烨调整RPM限制）\nQ3： 请求OpenAI时，回复内容为：Request timed out.\n回答：\n原因：形成原因需要case by case分析，建议考虑：\n1. 生成耗时较长导致超时（增加请求时的timeout时延设置，OpenAI接口有可选参数timeout，可传入合适的值来改善此问题）”\n 问题：“请问如何退公寓的时候需要注意什么？” \n 请仔细阅读参考材料回答问题。"
    }
  ],
  "n": 1,
  "temperature": 0.8,
  "top_p": 0.1,
  "disable_report": false
}